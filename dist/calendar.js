/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scss/button.scss":
/*!*********************************!*\
  !*** ./assets/scss/button.scss ***!
  \*********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  font-family: \\\"Quicksand\\\", sans-serif; }\\n  *:focus {\\n    outline: none; }\\n\\n.highlight {\\n  background-color: rgba(137, 228, 228, 0.527) !important; }\\n\\n.btn {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: relative;\\n  width: fit-content;\\n  height: fit-content;\\n  padding: 0.5rem 0.75rem;\\n  border-radius: 0.125rem;\\n  text-align: center;\\n  background-color: #0059ac;\\n  border: none;\\n  outline: none;\\n  cursor: pointer; }\\n  .btn:hover .tooltip {\\n    display: inline;\\n    position: absolute;\\n    bottom: 0%;\\n    right: 0%;\\n    z-index: 1;\\n    transform: translate(80%, 110%); }\\n  .btn:focus {\\n    border: 2px solid #00063d; }\\n\\n:host([size=\\\"sm\\\"]) .btn {\\n  padding: 0.5rem 1rem; }\\n\\n:host([size=\\\"md\\\"]) .btn {\\n  padding: 0.5rem 2.25rem; }\\n\\n:host([size=\\\"lg\\\"]) .btn {\\n  padding: 0.5rem 4.5rem; }\\n\\n:host([disabled]) .btn {\\n  cursor: not-allowed;\\n  filter: opacity(70%); }\\n  :host([disabled]) .btn:hover {\\n    filter: opacity(70%); }\\n  :host([disabled]) .btn:focus {\\n    border: none; }\\n\\n:host([img-pos=\\\"left\\\"]) .img {\\n  order: 1;\\n  margin: 0 0.25rem; }\\n\\n:host([img-pos=\\\"left\\\"]) .text {\\n  order: 2; }\\n\\n:host([img-pos=\\\"top\\\"]) .btn {\\n  flex-direction: column; }\\n\\n:host([img-pos=\\\"top\\\"]) .img {\\n  order: 1;\\n  margin: 0.25rem 0; }\\n\\n:host([img-pos=\\\"top\\\"]) .text {\\n  order: 2; }\\n\\n:host([img-pos=\\\"bottom\\\"]) .btn {\\n  flex-direction: column-reverse; }\\n\\n:host([img-pos=\\\"bottom\\\"]) .img {\\n  order: 1;\\n  margin: 0.25rem 0; }\\n\\n:host([img-pos=\\\"bottom\\\"]) .text {\\n  order: 2; }\\n\\n.img {\\n  width: 0px;\\n  height: 0px; }\\n\\n.img-on-right {\\n  margin: 0 0.25rem; }\\n\\n.tooltip {\\n  display: none;\\n  width: max-content;\\n  max-width: 27rem;\\n  height: max-content;\\n  padding: 0;\\n  background-color: black;\\n  color: white;\\n  opacity: 0.98;\\n  font-size: 0.875rem; }\\n\\n:host([rounded]) .btn {\\n  border-radius: 9999px; }\\n\\n.text {\\n  color: #f0ffff; }\\n\\n*:focus {\\n  outline: none; }\\n\\n:host {\\n  display: inline-block; }\\n\");\n\n//# sourceURL=webpack://web-components/./assets/scss/button.scss?");

/***/ }),

/***/ "./assets/scss/calendar.scss":
/*!***********************************!*\
  !*** ./assets/scss/calendar.scss ***!
  \***********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  font-family: \\\"Quicksand\\\", sans-serif; }\\n  *:focus {\\n    outline: none; }\\n\\n.highlight {\\n  background-color: rgba(137, 228, 228, 0.527) !important; }\\n\\n.calendar {\\n  position: relative;\\n  margin: 0 auto;\\n  width: 13.5rem;\\n  height: 247px;\\n  background-color: #ffffff;\\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4); }\\n  .calendar .month {\\n    width: 100%;\\n    height: 1.5rem;\\n    background-color: #167e56;\\n    color: #ffffff;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 0 0.5rem;\\n    text-align: center; }\\n    .calendar .month i {\\n      font-size: 1.5rem;\\n      cursor: pointer; }\\n    .calendar .month .prev {\\n      content: url(\\\"../assets/images/chevron.svg\\\");\\n      user-select: none; }\\n    .calendar .month .select-container {\\n      width: 8.1rem;\\n      height: 100%;\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: flex-end; }\\n    .calendar .month .next {\\n      content: url(\\\"../assets/images/chevron.svg\\\");\\n      transform: rotate(180deg);\\n      user-select: none; }\\n    .calendar .month h1 {\\n      font-size: 1rem;\\n      font-weight: 400;\\n      text-transform: uppercase;\\n      letter-spacing: 0.2rem; }\\n    .calendar .month p {\\n      font-size: 0.875rem; }\\n  .calendar .weekdays {\\n    width: 100%;\\n    margin: 0 auto;\\n    height: max-content;\\n    display: grid;\\n    grid-template-columns: repeat(7, 1fr);\\n    grid-template-rows: repeat(6, 1fr);\\n    text-align: center;\\n    justify-content: center;\\n    align-items: center; }\\n    .calendar .weekdays div {\\n      width: 1.92857rem;\\n      height: 1.675rem;\\n      color: #002719; }\\n    .calendar .weekdays .day {\\n      font-size: 0.7rem;\\n      font-weight: 400;\\n      height: max-content;\\n      cursor: default;\\n      user-select: none; }\\n    .calendar .weekdays .date {\\n      font-size: 0.625rem;\\n      font-weight: 200;\\n      line-height: 1.875rem;\\n      user-select: none; }\\n      .calendar .weekdays .date:hover:not(.today) {\\n        background-color: #9ae7ca;\\n        cursor: pointer; }\\n    .calendar .weekdays .prev-date,\\n    .calendar .weekdays .next-date {\\n      opacity: 0.5; }\\n    .calendar .weekdays .today {\\n      background-color: #167e56;\\n      color: #ffffff; }\\n  .calendar .today-btn {\\n    position: absolute;\\n    bottom: 0.125rem;\\n    right: 0.125rem;\\n    user-select: none; }\\n    .calendar .today-btn::part(button) {\\n      font-weight: 200; }\\n      .calendar .today-btn::part(button):hover {\\n        background-color: #d1ece2a1; }\\n      .calendar .today-btn::part(button):active {\\n        padding: 0.5rem 0.75rem;\\n        border: none; }\\n\\nvpr-select::part(select) {\\n  display: inline-block;\\n  position: relative;\\n  border: none;\\n  border-radius: 0px;\\n  border-bottom: 2px solid #287155;\\n  height: 1.5rem; }\\n\\nvpr-select::part(select):focus-within {\\n  border: none;\\n  border-bottom: 2px solid #287155 !important; }\\n\\n.month-select::part(select) {\\n  width: 5.8rem; }\\n\\n.month-select::part(para) {\\n  text-align: center; }\\n\\n.year-select::part(select) {\\n  width: 2.8rem; }\\n\\n.year-select::part(para) {\\n  text-align: left; }\\n\\nvpr-select::part(options) {\\n  overflow-x: hidden; }\\n\\nvpr-select::part(option) {\\n  font-size: 0.7rem;\\n  text-align: center; }\\n\\nvpr-select::part(para) {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  padding-top: 7px;\\n  font-size: 0.7rem;\\n  color: #ffffff;\\n  font-size: 0.875rem;\\n  justify-content: center;\\n  align-items: flex-end;\\n  line-height: 100%;\\n  vertical-align: none; }\\n\\nvpr-select::part(img) {\\n  width: 7px;\\n  height: 9px;\\n  position: absolute;\\n  bottom: 0;\\n  right: 3px; }\\n\\n.year-select::part(img) {\\n  right: -2px; }\\n\\n.disable {\\n  cursor: not-allowed !important; }\\n  .disable:hover {\\n    background-color: #21312b88 !important; }\\n\\n:host {\\n  display: inline-block; }\\n\");\n\n//# sourceURL=webpack://web-components/./assets/scss/calendar.scss?");

/***/ }),

/***/ "./assets/scss/select.scss":
/*!*********************************!*\
  !*** ./assets/scss/select.scss ***!
  \*********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  font-family: \\\"Quicksand\\\", sans-serif; }\\n  *:focus {\\n    outline: none; }\\n\\n.highlight {\\n  background-color: rgba(137, 228, 228, 0.527) !important; }\\n\\n.select {\\n  display: flex;\\n  justify-content: space-around;\\n  position: relative;\\n  width: 6rem;\\n  height: 1.875rem;\\n  line-height: 1.875rem;\\n  border: 2px solid black;\\n  border-radius: 0.5rem;\\n  color: black;\\n  cursor: default;\\n  transition: transform, overflow-y 0.5s linear; }\\n  .select:hover .tooltip {\\n    display: inline; }\\n  .select:focus-within {\\n    border: 2px solid #127cd3; }\\n  .select .para {\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    vertical-align: middle;\\n    border: none;\\n    outline: none;\\n    background-color: inherit;\\n    color: black;\\n    overflow-x: scroll;\\n    width: 80%;\\n    height: 100%;\\n    padding: 0 0.125rem;\\n    scrollbar-width: none;\\n    cursor: pointer;\\n    font-size: 0.825rem; }\\n    .select .para::-webkit-scrollbar {\\n      width: 0px;\\n      height: 0px; }\\n  .select .img {\\n    content: url(\\\"../assets/images/arrow-down.svg\\\");\\n    width: 17px;\\n    height: 100%;\\n    transition: transform 0.3s ease;\\n    user-select: none; }\\n  .select .options-box {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    transform: translateY(103%);\\n    opacity: 0;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\\n    pointer-events: none;\\n    overflow: hidden;\\n    height: max-content;\\n    width: 100%; }\\n    .select .options-box .options {\\n      width: 100%;\\n      height: 6.25rem;\\n      color: black;\\n      transition: transform 0.5s ease;\\n      transform: translateY(-150%);\\n      display: flex;\\n      overflow-y: auto;\\n      flex-direction: column;\\n      align-items: center;\\n      scrollbar-width: thin;\\n      scrollbar-color: #888 #f1f1f1; }\\n      .select .options-box .options::-webkit-scrollbar {\\n        width: 3px;\\n        height: 2px; }\\n      .select .options-box .options::-webkit-scrollbar-track {\\n        background-color: #f1f1f1; }\\n      .select .options-box .options::-webkit-scrollbar-thumb {\\n        background-color: #888; }\\n      .select .options-box .options::-webkit-scrollbar-thumb:hover {\\n        background-color: #555; }\\n      .select .options-box .options .option {\\n        display: flex;\\n        align-items: center;\\n        justify-content: flex-start;\\n        width: 100%;\\n        height: 1.875rem;\\n        line-height: 2;\\n        padding-left: 0.25rem;\\n        font-size: 0.825rem; }\\n        .select .options-box .options .option:hover, .select .options-box .options .option:focus {\\n          background-color: rgba(75, 129, 245, 0.534); }\\n\\n.disable-pointer-events {\\n  opacity: 1 !important;\\n  pointer-events: all !important;\\n  background-color: white;\\n  z-index: 5; }\\n\\n.arrow-rotate {\\n  transform: rotate(180deg); }\\n\\n.show {\\n  transform: translateY(0%) !important; }\\n\\n:host([width-size=\\\"md\\\"]) .select {\\n  width: 9rem; }\\n\\n:host([width-size=\\\"lg\\\"]) .select {\\n  width: 12rem; }\\n\\n:host([height-size=\\\"md\\\"]) .select {\\n  height: 2.5rem; }\\n  :host([height-size=\\\"md\\\"]) .select .para,\\n  :host([height-size=\\\"md\\\"]) .select .option {\\n    font-size: 1.25rem; }\\n  :host([height-size=\\\"md\\\"]) .select .img {\\n    width: 20px; }\\n\\n:host([height-size=\\\"lg\\\"]) .select {\\n  height: 3.125rem; }\\n  :host([height-size=\\\"lg\\\"]) .select .para,\\n  :host([height-size=\\\"lg\\\"]) .select .option {\\n    font-size: 1.5rem; }\\n  :host([height-size=\\\"lg\\\"]) .select .img {\\n    width: 23px; }\\n\\n.tooltip {\\n  display: none;\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  z-index: 1;\\n  opacity: 0.98;\\n  max-width: 27rem;\\n  font-size: 0.875rem;\\n  padding: 0.25rem;\\n  transform: translate(80%, 110%); }\\n\\n.detail {\\n  display: inline-block;\\n  font-size: 0.875rem;\\n  max-width: 36rem; }\\n\\n:host {\\n  display: inline-block; }\\n\");\n\n//# sourceURL=webpack://web-components/./assets/scss/select.scss?");

/***/ }),

/***/ "./src/button.js":
/*!***********************!*\
  !*** ./src/button.js ***!
  \***********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _assets_scss_button_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../assets/scss/button.scss */ \"./assets/scss/button.scss\");\n\r\n\r\nclass Button extends HTMLElement {\r\n  alpha(a) {\r\n    let currentColor = getComputedStyle(this.button).getPropertyValue(\"background-color\");\r\n    let match = /rgba?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*\\d+[\\.\\d+]*)*\\)/g.exec(currentColor);\r\n    a = a > 1 ? a / 100 : a;\r\n    return \"rgba(\" + [match[1], match[2], match[3], a].join(\",\") + \")\";\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.template = document.createElement(\"template\");\r\n    this.styles = document.createElement(\"style\");\r\n    this.styles.appendChild(document.createTextNode(_assets_scss_button_scss__WEBPACK_IMPORTED_MODULE_0__.default));\r\n    this.template.innerHTML = `\r\n    <button class=\"btn\" part=\"button\">\r\n        <span class=\"text\"></span> \r\n        <img class=\"img\" part=\"img\"></img>\r\n        <span class=\"tooltip\" part=\"tooltip\"></span>\r\n    </button>\r\n        `;\r\n\r\n    this.attachShadow({ mode: \"open\" });\r\n    this.shadowRoot.appendChild(this.styles);\r\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\r\n    this.button = this.shadowRoot.querySelector(\".btn\");\r\n    this.buttonText = this.shadowRoot.querySelector(\".text\");\r\n    this.img = this.shadowRoot.querySelector(\".img\");\r\n    this.tooltip = this.shadowRoot.querySelector(\".tooltip\");\r\n    this.rendered = false;\r\n  }\r\n\r\n  render() {\r\n    this.onTextChange();\r\n    this.onTooltipChange();\r\n    this.onBackgroundChange();\r\n    this.onColorChange();\r\n    this.onImgChange();\r\n    this.onBorderColorChange();\r\n    this.onBorderWidthChange();\r\n    this.onBorderRadiusChange();\r\n    this.rendered = true;\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.render();\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return [\r\n      \"text\",\r\n      \"img\",\r\n      \"bg-color\",\r\n      \"color\",\r\n      \"tooltip\",\r\n      \"border-color\",\r\n      \"border-width\",\r\n      \"border-radius\",\r\n    ];\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    // this.render();\r\n    if (this.rendered) {\r\n      switch (name) {\r\n        case \"text\":\r\n          this.onTextChange();\r\n          break;\r\n        case \"tooltip\":\r\n          this.onTooltipChange();\r\n          break;\r\n        case \"bg-color\":\r\n          this.onBackgroundChange();\r\n          break;\r\n        case \"color\":\r\n          this.onColorChange();\r\n          break;\r\n        case \"img\":\r\n          this.onImgChange();\r\n          break;\r\n        case \"border-color\":\r\n          this.onBorderColorChange();\r\n          break;\r\n        case \"border-width\":\r\n          this.onBorderWidthChange();\r\n          break;\r\n        case \"border-radius\":\r\n          this.onBorderRadiusChange();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onTextChange() {\r\n    // Set Text\r\n    this.buttonText.textContent =\r\n      this.getAttribute(\"text\") !== null ? this.getAttribute(\"text\") : \"Button\";\r\n  }\r\n\r\n  onTooltipChange() {\r\n    const tooltipText = this.getAttribute(\"tooltip\");\r\n    if (this.getAttribute(\"tooltip\") !== null && tooltipText.trim() !== \"\") {\r\n      this.tooltip.textContent = tooltipText;\r\n      this.tooltip.style.padding = '0.25rem';\r\n      \r\n      if(this.getAttribute(\"tooltip-color\") !== null) {\r\n        this.tooltip.style.color = this.getAttribute(\"tooltip-color\");\r\n      }\r\n      if(this.getAttribute(\"tooltip-bg-color\") !== null) {\r\n        this.tooltip.style.backgroundColor = this.getAttribute(\"tooltip-bg-color\");\r\n      }\r\n    } \r\n  }\r\n\r\n  onBackgroundChange() {\r\n    // Set Background Color\r\n    if(this.getAttribute(\"bg-color\") !== null) {\r\n      this.button.style.backgroundColor = this.getAttribute(\"bg-color\");\r\n    }\r\n  }\r\n\r\n  onColorChange() {\r\n    // Set Color\r\n    if(this.getAttribute(\"color\") !== null) {\r\n      this.buttonText.style.color = this.getAttribute(\"color\");\r\n    }\r\n  }\r\n\r\n  onImgChange() {\r\n    // Set img if url given\r\n    if (this.getAttribute(\"img\") !== null) {\r\n      this.img.style.width = \"20px\";\r\n      this.img.style.height = \"20px\";\r\n      this.img.src = this.getAttribute(\"img\");\r\n      this.img.classList.add(\"img-on-right\");\r\n    }\r\n  }\r\n\r\n  onBorderColorChange() {\r\n    if (this.getAttribute(\"border-color\") !== null) {\r\n      this.button.style.borderColor = this.getAttribute(\"border-color\");\r\n    }\r\n  }\r\n\r\n  onBorderWidthChange() {\r\n    if (this.getAttribute(\"border-width\") !== null) {\r\n      this.button.style.borderStyle = \"solid\";\r\n      this.button.style.borderWidth = this.getAttribute(\"border-width\");\r\n    }\r\n  }\r\n\r\n  onBorderRadiusChange() {\r\n    if (this.getAttribute(\"border-radius\") !== null) {\r\n      this.button.style.borderRadius = this.getAttribute(\"border-radius\");\r\n    }\r\n  }\r\n}\r\n\r\nwindow.customElements.get(\"vpr-button\") || window.customElements.define(\"vpr-button\", Button);\r\n\n\n//# sourceURL=webpack://web-components/./src/button.js?");

/***/ }),

/***/ "./src/calendar.js":
/*!*************************!*\
  !*** ./src/calendar.js ***!
  \*************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _assets_scss_calendar_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../assets/scss/calendar.scss */ \"./assets/scss/calendar.scss\");\n/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select */ \"./src/select.js\");\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./button */ \"./src/button.js\");\n\r\n\r\n\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\nclass Calendar extends HTMLElement {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.template = document.createElement(\"template\");\r\n    this.styles = document.createElement(\"style\");\r\n    this.styles.appendChild(document.createTextNode(_assets_scss_calendar_scss__WEBPACK_IMPORTED_MODULE_0__.default));\r\n    this.template.innerHTML = `\r\n    <div class=\"calendar\">\r\n      <div class=\"month\">\r\n          <i class=\"prev\"></i>\r\n          <div class=\"select-container\">\r\n              <vpr-select editable onSpaceToggle class=\"month-select\"></vpr-select>\r\n              <vpr-select editable onSpaceToggle class=\"year-select\"></vpr-select>\r\n          </div>\r\n          <i class=\"next\"></i>\r\n      </div>\r\n      <div class=\"weekdays\"></div>\r\n      <vpr-button border-radius=\"0px\" class=\"today-btn\" bg-color=\"#ffffff\" color=\"#167e56\" text=\"Today\"></vpr-button>\r\n    </div>\r\n        `;\r\n\r\n    this.attachShadow({ mode: \"open\" });\r\n    this.shadowRoot.appendChild(this.styles);\r\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\r\n    this.weekdays = this.shadowRoot.querySelector(\".weekdays\");\r\n    this.monthSelect = this.shadowRoot.querySelector(\".month-select\");\r\n    this.yearSelect = this.shadowRoot.querySelector(\".year-select\");\r\n    this.todayButton = this.shadowRoot.querySelector(\".today-btn\");\r\n    this.prevButton = this.shadowRoot.querySelector(\".prev\");\r\n    this.nextButton = this.shadowRoot.querySelector(\".next\");\r\n    this.isOpen = false;\r\n    this.today = new Date();\r\n    this.minDate = new Date(1500, 0, 5);\r\n    this.maxDate = new Date(5000, 0, 5);\r\n    this.selectedDate = this.today;\r\n\r\n    this.onMonthSelect = this.onMonthSelect.bind(this);\r\n    this.onYearSelect = this.onYearSelect.bind(this);\r\n  }\r\n\r\n  setMinDate() {\r\n    if(this.getAttribute('min') !== null && this.getAttribute('min') !== \"null\") {\r\n      try {\r\n        const date = this.getAttribute('min').split(\"/\");\r\n        this.minDate = new Date(parseInt(date[2]), parseInt(date[1]) - 1, parseInt(date[0]));\r\n      } catch {\r\n        this.minDate = new Date(1500, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  setMaxDate() {\r\n    if(this.getAttribute('max') !== null && this.getAttribute('max') !== \"null\") {\r\n      try {\r\n        const date = this.getAttribute('max').split(\"/\");\r\n        this.maxDate = new Date(parseInt(date[2]), parseInt(date[1]) - 1, parseInt(date[0]));\r\n      } catch {\r\n        this.maxDate = new Date(5000, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  setMinDateLimit(date) {\r\n    if(date.getFullYear() === this.minDate.getFullYear() && date.getMonth() === this.minDate.getMonth()) {\r\n      // Add disable class on prev-date\r\n      const prevDateElements = this.shadowRoot.querySelectorAll('.prev-date');\r\n      prevDateElements.forEach(prevDateElement => {\r\n        prevDateElement.classList.add('disable');\r\n      });\r\n      // Add disable class on dates before minDate\r\n      const dateElements = this.shadowRoot.querySelectorAll('.date');\r\n      dateElements.forEach(dateElement => {\r\n        if(!dateElement.classList.contains('prev-date') && !dateElement.classList.contains('next-date')) {\r\n          const dateNumber = parseInt(dateElement.textContent);\r\n          if(dateNumber < this.minDate.getDate()) {\r\n            dateElement.classList.add('disable');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setMaxDateLimit(date) {\r\n    if(date.getFullYear() === this.maxDate.getFullYear() && date.getMonth() === this.maxDate.getMonth()) {\r\n      // Add disable class on next-date\r\n      const nextDateElements = this.shadowRoot.querySelectorAll('.next-date');\r\n      nextDateElements.forEach(nextDateElement => {\r\n        nextDateElement.classList.add('disable');\r\n      });\r\n      // Add disable class on dates after maxDate\r\n      const dateElements = this.shadowRoot.querySelectorAll('.date');\r\n      dateElements.forEach(dateElement => {\r\n        if(!dateElement.classList.contains('prev-date') && !dateElement.classList.contains('next-date')) {\r\n          const dateNumber = parseInt(dateElement.textContent);\r\n          if(dateNumber > this.maxDate.getDate()) {\r\n            dateElement.classList.add('disable');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  renderCalendar(date) {\r\n    const maxCond = date <= this.maxDate;\r\n    const minCond = date >= this.minDate;\r\n    \r\n    if(minCond && maxCond) {\r\n      this.renderDates(date);\r\n    } else if(date.getFullYear() === this.minDate.getFullYear() && date.getMonth() === this.minDate.getMonth()) {\r\n      date.setDate(this.minDate.getDate());\r\n      this.renderDates(date);\r\n    } else if(date.getFullYear() === this.maxDate.getFullYear() && date.getMonth() === this.maxDate.getMonth()) {\r\n      date.setDate(this.maxDate.getDate());\r\n      this.renderDates(date);\r\n    } \r\n\r\n    if(!minCond) {\r\n      this.selectedDate = this.minDate;\r\n      this.monthSelect.setDefaultOption(this.minDate.getMonth());\r\n      this.yearSelect.setDefaultOption(0);\r\n    } else if(!maxCond) {\r\n      this.selectedDate = this.maxDate;\r\n      this.monthSelect.setDefaultOption(this.maxDate.getMonth());\r\n      this.yearSelect.setDefaultOption(this.maxDate.getFullYear() - this.minDate.getFullYear());\r\n    } else {\r\n      this.monthSelect.setDefaultOption(this.selectedDate.getMonth());\r\n      this.yearSelect.setDefaultOption(this.selectedDate.getFullYear() - this.minDate.getFullYear());\r\n    }\r\n  }\r\n\r\n  renderDates(date) {\r\n    const lastDateOfPrevMonth = new Date(date.getFullYear(), date.getMonth(), 0);\r\n    const lastDateOfCurrMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n    this.weekdays.innerHTML = \"\";\r\n    let daysDates = \"\";\r\n\r\n    days.forEach((day) => {\r\n      daysDates += `<div class=\"day\">${day}</div>`;\r\n    });\r\n\r\n    // Prev month's dates\r\n    // Runs (lastDateOfPrevMonth.getDay() + 1) times\r\n    for (let i = lastDateOfPrevMonth.getDay(); i >= 0; i--) {\r\n      daysDates += `<div class=\"date prev-date\">${lastDateOfPrevMonth.getDate() - i}</div>`;\r\n    }\r\n\r\n    // Curr month's dates\r\n    // Runs (lastDateOfCurrMonth.getDate()) times\r\n    for (let i = 1; i <= lastDateOfCurrMonth.getDate(); i++) {\r\n      if ( this.selectedDate.getDate() === i && this.selectedDate.getMonth() === date.getMonth() && this.selectedDate.getFullYear() === date.getFullYear() ) {\r\n        daysDates += `<div class=\"date today\">${i}</div>`;\r\n      } else {\r\n        daysDates += `<div class=\"date\">${i}</div>`;\r\n      }\r\n    }\r\n\r\n    // Next month's dates\r\n    // Runs (6 - lastDateOfCurrMonth.getDay()) times\r\n    for (let i = 1; i <=  42 - lastDateOfCurrMonth.getDate() - (lastDateOfPrevMonth.getDay() + 1); i++) {\r\n      daysDates += `<div class=\"date next-date\">${i}</div>`;\r\n    }\r\n\r\n    this.weekdays.innerHTML = daysDates;\r\n\r\n    this.setMinDateLimit(date);\r\n    this.setMaxDateLimit(date);\r\n    this.onDateClick();\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.setMinDate();\r\n    this.setMaxDate();\r\n    \r\n    let years = [];\r\n    for (let i = this.minDate.getFullYear(); i <= this.maxDate.getFullYear(); i++) {\r\n      years.push(i.toString());\r\n    }\r\n\r\n    this.monthSelect.setOptions(months, this.onMonthSelect);\r\n    this.yearSelect.setOptions(years, this.onYearSelect);\r\n    \r\n    if (this.selectedDate < this.minDate) {\r\n      this.selectedDate = this.minDate;\r\n    } else if (this.selectedDate > this.maxDate) {\r\n      this.selectedDate = this.maxDate;\r\n    }\r\n    this.renderCalendar(this.selectedDate);\r\n    \r\n    this.prevButton.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      if(this.selectedDate.getMonth() === 0) {\r\n        this.selectedDate = new Date(this.selectedDate.getFullYear() - 1, 11)\r\n        this.renderCalendar(this.selectedDate);\r\n      } else {\r\n        this.selectedDate = new Date(this.selectedDate.getFullYear(), this.selectedDate.getMonth() - 1)\r\n        this.renderCalendar(this.selectedDate);\r\n      }\r\n    });\r\n\r\n    this.nextButton.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      if(this.selectedDate.getMonth() === 11) {\r\n        this.selectedDate = new Date(this.selectedDate.getFullYear() + 1, 0)\r\n        this.renderCalendar(this.selectedDate);\r\n      } else {\r\n        this.selectedDate = new Date(this.selectedDate.getFullYear(), this.selectedDate.getMonth() + 1)\r\n        this.renderCalendar(this.selectedDate);\r\n      }\r\n    });\r\n\r\n    this.todayButton.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      this.selectedDate = this.today;\r\n      this.renderCalendar(this.selectedDate);\r\n      if(this.callback !== undefined)  this.callback();\r\n    });\r\n  }\r\n\r\n  setOnDateClick(callback, error) {\r\n    if(callback !== undefined)  this.callback = callback;\r\n    if(error !== undefined) this.error = error;\r\n  }\r\n\r\n  onDateClick() {\r\n    const dates = this.shadowRoot.querySelectorAll(\".date\");\r\n    dates.forEach(date => {\r\n      date.addEventListener('click', (event) => {\r\n        event.stopPropagation();\r\n        if(date.classList.contains('disable')) {\r\n          if(this.error !== undefined) this.error();\r\n        } else if(date.classList.contains('prev-date')) {\r\n          if(this.selectedDate.getMonth() === 0) {\r\n            this.selectedDate = new Date(this.selectedDate.getFullYear() - 1, 11, parseInt(date.textContent));\r\n            if(this.callback !== undefined)  this.callback();\r\n          } else {\r\n            this.selectedDate = new Date(this.selectedDate.getFullYear(), this.selectedDate.getMonth() - 1, parseInt(date.textContent));\r\n            if(this.callback !== undefined)  this.callback();\r\n          }\r\n        } else if(date.classList.contains('next-date')) {\r\n          if(this.selectedDate.getMonth() === 11) {\r\n            this.selectedDate = new Date(this.selectedDate.getFullYear() + 1, 0, parseInt(date.textContent));\r\n            if(this.callback !== undefined)  this.callback();\r\n          } else {\r\n            this.selectedDate = new Date(this.selectedDate.getFullYear(), this.selectedDate.getMonth() + 1, parseInt(date.textContent));\r\n            if(this.callback !== undefined)  this.callback();\r\n          }\r\n        } else {\r\n          this.selectedDate = new Date(this.selectedDate.getFullYear(), this.selectedDate.getMonth(), parseInt(date.textContent));\r\n          if(this.callback !== undefined)  this.callback();\r\n        }\r\n        \r\n        this.renderCalendar(this.selectedDate);\r\n      });\r\n    });\r\n  }\r\n\r\n  onMonthSelect(event) {\r\n    const month = this.monthSelect.selectedOption;\r\n    this.selectedDate = new Date(this.selectedDate.getFullYear(), months.indexOf(month));\r\n    if(this.selectedDate > this.maxDate) {\r\n      this.selectedDate = this.maxDate;\r\n    } else if(this.selectedDate < this.minDate) {\r\n      this.selectedDate = this.minDate;\r\n    }\r\n    this.renderCalendar(this.selectedDate);\r\n  }\r\n\r\n  onYearSelect(event) {\r\n    const year = this.yearSelect.selectedOption;\r\n    this.selectedDate = new Date(parseInt(year), this.selectedDate.getMonth());\r\n    if(this.selectedDate > this.maxDate) {\r\n      this.selectedDate = this.maxDate;\r\n    } else if(this.selectedDate < this.minDate) {\r\n      this.selectedDate = this.minDate;\r\n    }\r\n    this.renderCalendar(this.selectedDate);\r\n  }\r\n}\r\n\r\nwindow.customElements.get(\"vpr-calendar\") || window.customElements.define(\"vpr-calendar\", Calendar);\r\n\n\n//# sourceURL=webpack://web-components/./src/calendar.js?");

/***/ }),

/***/ "./src/select.js":
/*!***********************!*\
  !*** ./src/select.js ***!
  \***********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _assets_scss_select_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../assets/scss/select.scss */ \"./assets/scss/select.scss\");\n\r\n\r\nconst attr = [\r\n  \"editable\",\r\n  \"border-type\",\r\n  \"border-color\",\r\n  \"border-width\",\r\n  \"border-radius\",\r\n  \"select-color\", \r\n  \"select-bg-color\",\r\n  \"options-color\",\r\n  \"options-bg-color\",\r\n  \"detail\",\r\n  \"tooltip\",\r\n];\r\n\r\nclass Select extends HTMLElement {\r\n\r\n  constructor() {\r\n    super();\r\n    this.template = document.createElement(\"template\");\r\n    this.styles = document.createElement(\"style\");\r\n    this.styles.appendChild(document.createTextNode(_assets_scss_select_scss__WEBPACK_IMPORTED_MODULE_0__.default));\r\n    this.template.innerHTML = `\r\n    <div class=\"container\">\r\n      <div class=\"select\" part=\"select\">\r\n        <input class=\"para\" part=\"para\" tabindex=\"-1\" readonly/>\r\n        <i class=\"img\" part=\"img\"></i>\r\n        <div class=\"options-box\">\r\n            <div class=\"options\" part=\"options\"></div>\r\n        </div>\r\n        <span class=\"tooltip\" part=\"tooltip\"></span>\r\n      </div>\r\n      <span class=\"detail\" part=\"detail\"></span>\r\n    </div>\r\n        `;\r\n\r\n    this.attachShadow({mode: \"open\"});\r\n    this.shadowRoot.appendChild(this.styles);\r\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\r\n    this.select = this.shadowRoot.querySelector(\".select\");\r\n    this.para = this.shadowRoot.querySelector(\".select .para\");\r\n    this.image = this.shadowRoot.querySelector(\".select .img\");\r\n    this.optionsBox = this.shadowRoot.querySelector(\".select .options-box\");\r\n    this.options = this.shadowRoot.querySelector(\".options\");\r\n    this.detail = this.shadowRoot.querySelector(\".detail\");\r\n    this.tooltip = this.shadowRoot.querySelector(\".tooltip\");\r\n    this.optionsList = [];\r\n    this.currentOptionIndex = 0;\r\n  }\r\n\r\n  setAttrEditable() {\r\n    if(this.getAttribute(\"editable\") !== null) {\r\n      this.para.removeAttribute(\"readonly\");\r\n      this.para.style.cursor = \"text\";\r\n    }\r\n  }\r\n\r\n  setBorderType() {\r\n    if(this.getAttribute(\"border-type\") === \"all\") {\r\n      this.select.style.borderStyle = \"solid\";\r\n    }\r\n  }\r\n\r\n  setBorderColor() {\r\n    this.select.style.borderColor =\r\n      this.getAttribute(\"border-color\") || \"rgba(0, 0, 0, 1)\";\r\n  }\r\n\r\n  setBorderWidth() {\r\n    this.select.style.borderWidth = \r\n      this.getAttribute(\"border-width\") || \"2px\";\r\n  }\r\n\r\n  setBorderRadius() {\r\n    this.select.style.borderRadius = this.getAttribute(\"border-radius\") || \"0.5rem\";\r\n  }\r\n\r\n  setSelectColor() {\r\n    this.select.style.color = this.getAttribute(\"select-color\") || \"black\";\r\n  }\r\n\r\n  setSelectBackgroundColor() {\r\n    this.select.style.backgroundColor = this.getAttribute(\"bg-color\") || \"white\";\r\n  }\r\n\r\n  setOptionsColor() {\r\n    this.options.style.color = this.getAttribute(\"option-color\") || \"black\";\r\n  }\r\n\r\n  setOptionsBackgroundColor() {\r\n    this.options.style.backgroundColor = this.getAttribute(\"option-bg-color\") || \"white\";\r\n  }\r\n\r\n  onDetailChange() {\r\n    const detailText = this.getAttribute(\"detail\");\r\n    if (detailText !== null && detailText.trim() !== \"\") {\r\n      this.detail.textContent = detailText;\r\n      this.detail.style.display = \"inline-block\";\r\n      this.detail.style.width = \"max-content\";\r\n      this.detail.style.height = \"max-content\";\r\n      this.detail.style.paddingTop = \"0.125rem\";\r\n      this.detail.style.paddingLeft = \"0.16rem\";\r\n      this.detail.style.color = this.getAttribute(\"detail-color\") || \"#858587\";\r\n      this.detail.style.backgroundColor =\r\n        this.getAttribute(\"detail-bg-color\") || \"white\";\r\n    } else {\r\n      this.detail.style.display = \"none\";\r\n      this.detail.style.width = \"0px\";\r\n      this.detail.style.height = \"0px\";\r\n      this.detail.style.paddingTop = \"0px\";\r\n      this.detail.style.paddingLeft = \"0px\";\r\n    }\r\n  }\r\n\r\n  onTooltipChange() {\r\n    const tooltipText = this.getAttribute(\"tooltip\");\r\n    if (tooltipText !== null && tooltipText.trim() !== \"\") {\r\n      this.tooltip.textContent = this.getAttribute(\"tooltip\");\r\n      this.tooltip.style.width = \"max-content\";\r\n      this.tooltip.style.height = \"max-content\";\r\n      this.tooltip.style.color = this.getAttribute(\"tooltip-color\") || \"white\";\r\n      this.tooltip.style.backgroundColor =\r\n        this.getAttribute(\"tooltip-bg-color\") || \"black\";\r\n    } else {\r\n      this.tooltip.style.width = \"0px\";\r\n      this.tooltip.style.height = \"0px\";\r\n      this.tooltip.style.padding = \"0px\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.setAttrEditable();\r\n    this.setBorderType();\r\n    this.setBorderType();\r\n    this.setBorderWidth();\r\n    this.setBorderRadius();\r\n    this.onDetailChange();\r\n    this.onTooltipChange();\r\n  }\r\n\r\n  setOptions(optionsList, callback) {\r\n    this.optionsList = optionsList;\r\n    this.options.innerHTML = \"\";\r\n    let optionsString = \"\";\r\n\r\n    this.optionsList.forEach((option, index) => {\r\n      optionsString += `<p class=\"option\" tabindex=\"2\" id=\"option${index}\" part=\"option\">${option}</p>`;\r\n    });\r\n\r\n    this.options.innerHTML = optionsString;\r\n\r\n    this.optionElements = [];\r\n    const options = this.shadowRoot.querySelectorAll('.option');\r\n    options.forEach(option => {\r\n      this.optionElements.push(option);\r\n    });\r\n\r\n    this.setOnOptionClick(callback);\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.render();\r\n    \r\n    this.select.addEventListener(\"click\", (event) => {\r\n      event.stopPropagation();\r\n      if (this.options.classList.contains(\"show\")) {\r\n        this.options.classList.remove(\"show\");\r\n        this.image.classList.remove(\"arrow-rotate\");\r\n        this.optionsBox.classList.remove(\"disable-pointer-events\");\r\n      } else {\r\n        this.options.classList.add(\"show\");\r\n        this.image.classList.add(\"arrow-rotate\");\r\n        this.optionsBox.classList.add(\"disable-pointer-events\");\r\n      }\r\n    });\r\n\r\n    this.select.addEventListener('keydown', (event) => {\r\n      event.stopPropagation();\r\n      if(event.key === \"Enter\") { // Enter\r\n        event.preventDefault();\r\n        this.options.classList.remove(\"show\");\r\n        this.image.classList.remove(\"arrow-rotate\");\r\n        this.optionsBox.classList.remove(\"disable-pointer-events\");\r\n      }\r\n\r\n      if(this.getAttribute('onSpaceToggle') !== null) {\r\n        if(event.key === \" \" || event.key === \"Spacebar\") { // Space\r\n          event.preventDefault();\r\n          this.para.focus();\r\n          if (this.options.classList.contains(\"show\")) {\r\n            this.options.classList.remove(\"show\");\r\n            this.image.classList.remove(\"arrow-rotate\");\r\n            this.optionsBox.classList.remove(\"disable-pointer-events\");\r\n          } else {\r\n            this.options.classList.add(\"show\");\r\n            this.image.classList.add(\"arrow-rotate\");\r\n            this.optionsBox.classList.add(\"disable-pointer-events\");\r\n          }\r\n        } \r\n      }\r\n    });\r\n\r\n    this.select.addEventListener('keydown', (event) => {\r\n      if(event.key === \"Escape\" || event.key === \"Esc\") { // Escape\r\n        this.options.classList.remove(\"show\");\r\n        this.image.classList.remove(\"arrow-rotate\");\r\n        this.optionsBox.classList.remove(\"disable-pointer-events\");\r\n      } else if(event.key === \"ArrowDown\" || event.key === \"Down\") {\r\n        event.preventDefault();\r\n        const optionElement = this.shadowRoot.querySelector(`#option${this.currentOptionIndex}`);\r\n        optionElement.focus();\r\n      }\r\n    });\r\n\r\n    window.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      this.options.classList.remove(\"show\");\r\n      this.image.classList.remove(\"arrow-rotate\");\r\n      this.optionsBox.classList.remove(\"disable-pointer-events\");\r\n    });\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return attr;\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    switch (name) {\r\n      case \"editable\":\r\n        this.setAttrEditable();\r\n        break;\r\n      case \"border-type\":\r\n        this.setBorderType();\r\n        break;\r\n      case \"border-color\":\r\n        this.setBorderColor();\r\n        break;\r\n      case \"border-width\":\r\n        this.setBorderWidth();\r\n        break;\r\n      case \"border-radius\":\r\n        this.setBorderRadius();\r\n        break;\r\n      case \"detail\":\r\n        this.onDetailChange();\r\n        break;\r\n      case \"tooltip\":\r\n        this.onTooltipChange();\r\n        break;\r\n    }\r\n  }\r\n\r\n  setOnOptionClick(callback) {\r\n    this.optionElements.forEach((option, index) => {\r\n      option.addEventListener('click', (event) => {\r\n        this.para.value = option.textContent;\r\n        this.scrollOptionsTo(index);\r\n        if(callback !== undefined) {\r\n          callback(event);\r\n        }\r\n      });\r\n\r\n      option.addEventListener('keydown', (event) => {\r\n        event.preventDefault();\r\n        const totalOptionElements = this.optionElements.length;\r\n        if(event.key === \"ArrowUp\" || event.key === \"Up\") {\r\n          event.stopPropagation();\r\n          const optionIndex = (totalOptionElements + index - 1) % totalOptionElements;\r\n          const newOptionId = `#option${optionIndex}`;\r\n          this.shadowRoot.querySelector(newOptionId).focus();\r\n        } else if(event.key === \"ArrowDown\" || event.key === \"Down\") {\r\n          event.stopPropagation();\r\n          const optionIndex = (totalOptionElements + index + 1) % totalOptionElements;\r\n          const newOptionId = `#option${optionIndex}`;\r\n          this.shadowRoot.querySelector(newOptionId).focus();\r\n        } else if(event.key === \"Enter\") {\r\n          this.para.value = option.textContent;\r\n          this.scrollOptionsTo(index);\r\n          if(callback !== undefined) {\r\n            callback(event);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.para.addEventListener('keyup', (event) => {\r\n      if(event.key === \"Enter\") { // Enter\r\n        event.preventDefault();\r\n        if(this.optionsList.indexOf(this.para.value) !== -1) {\r\n          if(callback !== undefined) {\r\n            callback(event);\r\n          }\r\n        } else {\r\n          this.para.value = this.optionsList[this.currentOptionIndex];\r\n        }\r\n      } \r\n    });\r\n  }\r\n\r\n  scrollOptionsTo(index) {\r\n    const option = this.optionElements[0];\r\n    const optionHeight = parseFloat(getComputedStyle(option).height.replace('px', ''));\r\n    setTimeout(() => {\r\n      this.options.scrollTo({\r\n        top: index * optionHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 100);\r\n    \r\n    this.currentOptionIndex = index;\r\n  }\r\n\r\n  setDefaultOption(index) {\r\n    this.para.value = this.optionsList[index];\r\n    this.scrollOptionsTo(index);\r\n  }\r\n\r\n  get selectedOption() {\r\n    return this.para.value;\r\n  }\r\n\r\n  get selectedOptionIndex() {\r\n    return this.optionsList.indexOf(this.para.value);\r\n  }\r\n}\r\n\r\nwindow.customElements.get(\"vpr-select\") || window.customElements.define(\"vpr-select\", Select);\n\n//# sourceURL=webpack://web-components/./src/select.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/calendar.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;